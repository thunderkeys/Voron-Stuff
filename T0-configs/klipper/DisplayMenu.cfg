
# Summary of items in this file over the "stock" / default menu config:
# Additional temps for TPU, PETG. 
# A Cooldown command
# Bed leveing options, which automatically homes the bed before it goes through the leveling procedure
# A "Shutdown" menu option which allows you to safely stop the Rasp Pi and can then turn the machine off.
# At the very bottom of the file I have disabled a bunch of menu items that I did not think were useful.

# If you want to change the order of menu items, adjust the "index" value which applies to whatever sub group those items are in.
# Below you can add additional temps easily using the examples provided. 

[display_data _default_16x4 speed_factor]
position: 1, 10
text: 
    # Show glyph
    {% if printer["temperature_sensor chamber_temp"].temperature > 30.0 %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~chamber_heating{frame}~
    {% else %}
      ~chamber~
    {% endif %}
  #show temp
  { "%3.0f" % printer["temperature_sensor chamber_temp"].temperature }
  ~degrees~

[display_glyph chamber]
data:
  ................
  ****************
  *..............*
  *..............*
  *..............*
  *..............*
  *..............*
  *..............*
  *..............*
  *..............*
  *..............*
  *..............*
  ****************
  **............**  
  ****************
  ................

[display_glyph chamber_heating1]
data:
  ................
  ****************
  *..............*
  *..............*
  *.*....*....*..*
  **....*....*...*
  *.*....*....*..*
  *..*....*....*.*
  *.*....*....*..*
  **....*....*...*
  *.*....*....*..*
  *..............*
  ****************
  **............**  
  ****************
  ................

[display_glyph chamber_heating2]
data:
  ................
  ****************
  *..............*
  *..............*
  *.*....*....*..*
  *..*....*....*.*
  *.*....*....*..*
  **....*....*...*
  *.*....*....*..*
  *..*....*....*.*
  *.*....*....*..*
  *..............*
  ****************
  **............**  
  ****************
  ................

[display_glyph voron]
data:
    0000000110000000
    0000011111100000
    0000111111110000
    0011111111111100
    0111110011001110
    0111100110011110
    0111001100111110
    0110011001111110
    0111111001100110
    0111110011001110
    0111100110011110
    0111001100111110
    0011111111111100
    0000111111110000
    0000011111100000
    0000000110000000

[display_template _print_status]
text:
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
    { "V0.3187 " }
    ~voron~
    { " Ready" }
  {% endif %}

#Entries
[menu __main __sdcard __reprint]
type: command
name: Reprint Last
enable: {(not printer.idle_timeout.state == "Printing")}
gcode:
    {% set state = printer.print_stats.state %}
    {% set file = printer.print_stats.filename %}
    {% if state == 'printing' %}
        { action_respond_info("Print is still running") }
    {% elif not file.endswith("gcode") %}
        { action_respond_info("No file to reprint") }
    {% else %}
        SDCARD_PRINT_FILE FILENAME="{file}"
        { action_respond_info("Print job restarted.") }
    {% endif %}

[menu __main __temp __preheat_abs]
type: list
name: Preheat ABS
index:3

[menu __main __temp __preheat_pla]
type: list
name: Preheat PLA
index:4

[menu __main __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S110
    M104 S255

[menu __main __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S255

[menu __main __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S110


[menu __main __temp __preheat_petg]
type: list
name: Preheat PETG
index:5

[menu __main __temp __preheat_petg __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S80
    M104 S240

[menu __main __temp __preheat_petg __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S240

[menu __main __temp __preheat_petg __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S80

#Entries for TPU
[menu __main __temp __preheat_tpu]
type: list
name: Preheat TPU
index:6

[menu __main __temp __preheat_tpu __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S60
    M104 S230

[menu __main __temp __preheat_tpu __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S230

[menu __main __temp __preheat_tpu __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S60

[menu __main __temp __cooldown]
type: command
name: Cooldown
index:7
gcode: 
    M140 S0
    M104 S0

#Bed Leveling Menu Item
[menu __main __bed_leveling]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Level Bed

[menu __main __bed_leveling __preheat]
type: command
#enable: extruder.is_enabled,heater_bed.is_enabled
name: Preheat all
gcode: 
    M140 S60 
    M104 S200

[menu __main __bed_leveling __home]
type: command
name: Home All
gcode: G28
#enable: {not printer.idle_timeout.state == "Printing"}

[menu __main __bed_leveling __start]
type: command
name: Start
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: 
    G28
    BED_SCREWS_ADJUST

[menu __main __bed_leveling __accept]
type: command
name: Accept
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: accept

[menu __main __bed_leveling __adjust]
type: command
name: Adjusted
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: adjusted

[menu __main __prepare __bed_leveling __abort_screws]
type: command
name: Abort
#enable: {not printer.idle_timeout.state == "Printing"}
gcode: abort

#Shutdown from: https://klipper.discourse.group/t/shutdown-command-to-the-raspberry/584/3
[delayed_gcode shutdown_machine]
gcode:
     {action_call_remote_method("shutdown_machine")}
initial_duration: 0.0
[menu __main __poweroff]
type: command
enable: {printer.idle_timeout.state != "Printing"}
name: Safely Shutdown
gcode:
     M117 Shutdown_RPI
     M118 Shutdown_RPI
     { menu.exit() }    
     UPDATE_DELAYED_GCODE ID=shutdown_machine DURATION=1 


   
#####################################################################
#       Disable items from stock- uncomment to disable
#####################################################################
[menu __main __octoprint]
type: disabled
#[menu __main __temp]
#type:disabled
#[menu __main __temp __preheat_pla]
#type: disabled
#[menu __main __temp __preheat_abs]
#type: disabled
#[menu __main __filament __loadf]
#type: disabled
#[menu __main __filament __loads]
#type: disabled
#[menu __main __filament __unloadf]
#type: disabled
#[menu __main __filament __unloads]
#type: disabled
#[menu __main __filament __feed]
#type: disabled
#[menu __main __filament __loadf]
#type: disabled
#[menu __main __filament __hotend0_target]
#type: disabled
#[menu __main __temp __cooldown]
#type: disabled
[menu __main __setup __calib __delta_calib_auto]
type: disabled
[menu __main __setup __calib __delta_calib_man]
type: disabled
#[menu __main __control __move_10mm]
#type: disabled
#[menu __main __control __move_01mm]
#type: disabled
#[menu __main __setup __calib __bedprobe]
#type: disabled
#[menu __main __setup __dump]
#type: disabled
#[menu __main __control __fanonoff]
#type: disabled
#[menu __main __setup __calib]
#type: disabled
